apiVersion: v1
kind: Template
labels:
    template: caddy-minio-pvc
message: |-
    The following service(s) have been created in your project:
      ${MINIO_SERVICE_NAME}
      ${CADDY_SERVICE_NAME}
    For more information abotu using this template, including OpenShift considerations, please contact teh rocketchat community.
    This Template will add the following objects:

      Minio objects:
      * Deployment config
      * secrets - used for client authentication
      * Service
      * Route

      Caddy objects:
      * Deployment config
      * configMap - used as the config for caddy.
      * Route
      * Service

      A shared PersistentVolumeClaim:
      * shared between the Minio and Caddy pods

metadata:
  annotations:
    description: |-
      Router-data Template for use in OpenShift.

      WARNING: Any configuration stored will be lost upon pod destruction. ConfigMaps should be used for codified configuration.
    iconClass: icon-other-unknown
    openshift.io/display-name: Caddy-Minio-PVC
    openshift.io/documentation-url: https://github.com/bcgov/ols-geocoder
    openshift.io/long-description: This template provides sample a caddy/minio with a shared PCV.
    openshift.io/provider-display-name: DataBC-OLS
    openshift.io/support-url: https://github.com/bcgov/ols-geocoder
    tags: geocoder,router,caddy,minio
  name: caddy-minio-pvc-template
parameters:
  - description: A common label that will be applied to all objects
    displayName: App Label
    name: APPLICATION_NAME
    required: true
    value: router-data
  - description: The name of the Deployment Environment e.g. test, prod, dlv - used for the caddy hostname.
    displayName: Deployment Environment
    name: DEPLOYMENT_ENV
    required: true
    value: -dlv
  - description: The name of the Caddy service.
    displayName: Caddy Service Name
    name: CADDY_SERVICE_NAME
    required: true
    value: caddy
  - description: The name of the minio service.
    displayName: Minio Service Name
    name: MINIO_SERVICE_NAME
    required: true
    value: minio
  - description: Default route subdomain - use apps.silver.devops.gov.bc.ca
    displayName: Route subdomain
    name: ROUTE_SUBDOMAIN
    required: true
    value:  192.168.64.4.nip.io
  - description: Internal route subdomain
    displayName: Route subdomain
    name: INTERNAL_ROUTE_SUBDOMAIN
    required: true
    value:  pathfinder.bcgov
  - description: Tools namespace containing minio/mc image
    name: TOOLS_NAMESPACE
    default: e80f9d
    required: true
  # - description: Webhook url (used to trigger geocoder/bgeo apps reload)
  #   name: WEBHOOK_URL_GEOCODER
  #   default: http://el-minio-geocodoer-webhook-listener-988040-tools.apps.silver.devops.gov.bc.ca/
  #   required: true
  # - description: Webhook url (used to generate address ranges)
  #   name: WEBHOOK_URL_BAARG
  #   default: http://el-minio-baarg-webhook-listener-988040-tools.apps.silver.devops.gov.bc.ca/
  #   required: true
  # - name: WEBHOOK_URL_ROUTER
  #   description: Webhook url (used to trigger router app reload)
  #   default: http://el-minio-router-webhook-listener-988040-tools.apps.silver.devops.gov.bc.ca/
  # - name: WEBHOOK_URL_RBCM
  #   description: Webhook url (used to trigger Routable BC Maker job)
  #   default: http://el-minio-rbcm-webhook-listener-988040-tools.apps.silver.devops.gov.bc.ca/
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  #
  # Caddy DeploymentConfig
  #
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${CADDY_SERVICE_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${CADDY_SERVICE_NAME}
      spec:
        containers:
        - args:
          - run
          - '--config'
          - /conf/Caddyfile
          command:
          - caddy
          image: 'caddy/caddy:2.4.1-alpine'
          imagePullPolicy: IfNotPresent
          name: www
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: caddy-conf
          - mountPath: /data
            name: app-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: app-volume
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-pv
            #claimName: minio-pv-claim
        - configMap:
            defaultMode: 420
            items:
            - key: caddifile
              path: Caddyfile
            name: caddy-conf-${APPLICATION_NAME}
          name: caddy-conf
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: apps.openshift.io/v1
  #
  # Minio DeploymentConfig
  #
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${MINIO_SERVICE_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${MINIO_SERVICE_NAME}
      spec:
        containers:
          - name: minio
            env:
              - name: MINIO_ROOT_USER
                valueFrom:
                  secretKeyRef:
                    key: minioAccessKey
                    name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
              - name: MINIO_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: minioSecretKey
                    name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
              - name: MINIO_CONFIG_DIR
                value: /tmp
            image: image-registry.openshift-image-registry.svc:5000/${TOOLS_NAMESPACE}-tools/minio-client:latest
            args:
              - server
              - /data
              - --console-address
              - :9001
            imagePullPolicy: Always
            ports:
            - containerPort: 9001
              protocol: TCP
            - containerPort: 9000
              protocol: TCP
            resources: {}
            lifecycle:
              postStart:
                exec:
                  command:
                    - "/bin/sh"
                    - "-c"
                    - >
                      mc mb data/geocoder;
                      mc mb data/baarg;
                      mc mb data/router;
                      mc mb data/rbcm;
                      # until ( mc alias set data-integration-minio https://${MINIO_SERVICE_NAME}-${APPLICATION_NAME}}-api.${ROUTE_SUBDOMAIN}/ ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} ) do echo '...waiting...' && sleep 1; done
                      # mc admin config get data-integration-minio notify_webhook;
                      # mc admin config set data-integration-minio notify_webhook:geocoder queue_limit='10' endpoint=$WEBHOOK_URL_GEOCODER queue_dir='/.mc/queue/';
                      # mc admin config set data-integration-minio notify_webhook:baarg queue_limit='10' endpoint=$WEBHOOK_URL_BAARG queue_dir='/.mc/queue/';
                      # mc admin config set data-integration-minio notify_webhook:router queue_limit='10' endpoint=$WEBHOOK_URL_ROUTER queue_dir='/.mc/queue/';
                      # mc admin config set data-integration-minio notify_webhook:rbcm queue_limit='10' endpoint=http://el-minio-rbcm-webhook-listener-988040-tools.apps.silver.devops.gov.bc.ca/ queue_dir='/.mc/queue/';
                      # mc admin service restart data-integration-minio;
                      # mc event add data-integration-minio/geocoder arn:minio:sqs::geocoder:webhook --event put --suffix .files --prefix geocoder;
                      # mc event add data-integration-minio/baarg arn:minio:sqs::baarg:webhook --event put --suffix .files --prefix baarg;
                      # mc event add data-integration-minio/router arn:minio:sqs::router:webhook --event put --suffix .files --prefix router;
                      # mc event add data-integration-minio/rbcm arn:minio:sqs::rbcm:webhook --event put --suffix .files --prefix rbcm;

            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /data
              name: minio-vol
            - mountPath: /.mc
              name: mc-vol
            readinessProbe:
              httpGet:
                path: /minio/health/ready
                port: 9000
                scheme: HTTP
              initialDelaySeconds: 120
              periodSeconds: 15
              timeoutSeconds: 10
              successThreshold: 1
              failureThreshold: 3
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mc-vol
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-mc-config
        - name: minio-vol
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-pv
            #claimName: minio-pv-claim
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
    #name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 9001-tcp
      port: 9001
      protocol: TCP
      targetPort: 9001
    - name: 9000-tcp
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      deploymentconfig: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}
    #name: ${APPLICATION_NAME}
  spec:
    ports:
    #- name: 8080-tcp
    - name: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
  spec:
    host: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}.${ROUTE_SUBDOMAIN}
    port:
      targetPort: 9001-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}-api
  spec:
    host: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}-api.${ROUTE_SUBDOMAIN}
    port:
      targetPort: 9000-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}
    #name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
    # TODO
    # Questions:
    #    1. why is the route not listed in the overview page?  trivial but it bugs me. it WAS showing up before!
    #    2. Should routes be internal only? e.g. route-to-this-app.pathfinder.bcgov
    #
  spec:
    # host: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}.${ROUTE_SUBDOMAIN}
    #host: ${APPLICATION_NAME}${DEPLOYMENT_ENV}.${ROUTE_SUBDOMAIN}
    host: ${APPLICATION_NAME}.${ROUTE_SUBDOMAIN}
    port:
      targetPort: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}
    tls:
      termination: edge
    to:
      kind: Service
      name: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}
      #name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      env: internal
      route: within-cluster
    name: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}-int
    #name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
    # TODO
    # Questions:
    #    1. why is the route not listed in the overview page?  trivial but it bugs me. it WAS showing up before!
    #    2. Should routes be internal only? e.g. route-to-this-app.pathfinder.bcgov
    #
  spec:
    host: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}.${INTERNAL_ROUTE_SUBDOMAIN}
    port:
      # targetPort: 8080-tcp
      targetPort: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}
    to:
      kind: Service
      name: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}
      #name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
# TODO
# What to name This
# What size works?
#
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      #volume.beta.kubernetes.io/storage-class: gluster-file
      volume.beta.kubernetes.io/storage-provisioner: netapp.io/trident
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-pv
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 10Gi
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      #volume.beta.kubernetes.io/storage-class: gluster-file
      volume.beta.kubernetes.io/storage-provisioner: netapp.io/trident
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-mc-config
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 50Mi
- apiVersion: v1
  data:
    caddifile: |-
      :8080
      root * /data
      file_server

    # root /data
    # log stdout
    # errors stdout
    # ext .png .kml .html .htm
    #caddifile: |-
    #  0.0.0.0:2015
    #    git https://8262169f6c9921fb0cc4eca5d21fd61f98691bb1@gogs.data.gov.bc.ca/dbcols/ols-router-data.git /data/router {
    #    branch qa
    #    }
    #  root /data/router
    #  log stdout
    #  errors stdout
    #  ext .png .kml .html .htm
  kind: ConfigMap
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: caddy-conf-${APPLICATION_NAME}
- apiVersion: v1
  data:
    minioAccessKey: cm91dGVyZGF0YQ==
    minioSecretKey: cm91dGVyZGF0YUBnb3YuYmMuY2E=
  kind: Secret
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
  type: Opaque
